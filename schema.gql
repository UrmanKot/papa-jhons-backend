# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateProductInput {
  carbs: Int
  category: String!
  count: Int
  description: String!
  energyValue: Int
  greases: Int
  isAddNutritionalValue: Boolean!
  name: String!
  price: Int!
  proteins: Int
  weight: Int
}

input CreateUserInput {
  email: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginUserInput {
  email: String!
  password: String!
}

type LoginUserResponse {
  tokens: Tokens!
  user: UserNode!
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!, file: Upload): ProductNode!
  login(loginUserInput: LoginUserInput!): LoginUserResponse!
  register(createUserInput: CreateUserInput!): UserNode!
}

enum ProductCategoryType {
  COMBOBOX
  DESSERT
  DRINKS
  HOT
  PIZZA
  SAUCES
  SNACKS
  VEGAN
}

type ProductNode {
  """Углеводы"""
  carbs: Int
  category: ProductCategoryType!

  """Количество"""
  count: Int
  createdAt: DateTime!
  description: String!

  """Энергетическая ценность"""
  energyValue: Int

  """Жиры"""
  greases: Int
  id: String!
  idNumber: ID!
  image: String

  """Добавить пищевую ценность?"""
  isAddNutritionalValue: Boolean!
  name: String!

  """Цена"""
  price: Int!

  """Белки"""
  proteins: Int

  """Цена по скидке"""
  salePrice: Int
  updatedAt: DateTime!

  """Вес"""
  weight: Int
}

type Query {
  getCurrentUser: UserNode!
  product(id: String!): ProductNode!
  products: [ProductNode!]!
}

enum RoleType {
  ADMIN
  USER
}

type Tokens {
  accessToken: String!
  refreshToken: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserNode {
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: String!
  idNumber: ID!
  image: String
  isActivated: Boolean!
  lastName: String!
  role: RoleType!
  updatedAt: DateTime!
}